/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define NUMS   1
#define SYMB   2
#define NAV    3
/ {
    ZMK_MACRO(p11,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&macro_press &kp LSHFT>
    , <&macro_tap &kp M>
    , <&macro_release &kp LSHFT>
    , <&macro_tap &kp Y &kp S &kp M &kp E &kp L &kp L &kp Y &kp O &kp L &kp D &kp S &kp O &kp C &kp K &kp S &kp N1 &kp N2>;
    )
    ZMK_MACRO(p12,
        wait-ms = <30>;
        tap-ms = <40>;
        bindings = <&kp M &kp Y &kp S &kp M &kp E &kp L &kp L &kp Y &kp O &kp L &kp D &kp S &kp O &kp C &kp K &kp S>;
    )
    behaviors {
          hm: homerow_mods {
              compatible = "zmk,behavior-hold-tap";
              label = "HOMEROW_MODS";
              #binding-cells = <2>;
              tapping-term-ms = <150>;
              quick-tap-ms = <0>;
              flavor = "tap-preferred";
              bindings = <&kp>, <&kp>;
          };
    lt: layer_tap {
              compatible = "zmk,behavior-hold-tap";
              label = "LAYER_TAP";
              #binding-cells = <2>;
              pping-term-ms = <150>;
              quick-tap-ms = <0>;
              flavor = "tap-preferred";
              bindings = <&kp>, <&kp>;
          };
          dot_at: dot_at {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_AT";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp AT>;
            mods = <(MOD_RGUI|MOD_RSFT)>;
        };
          comexcl: comma_exclamation {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_EXCLAMATION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp EXCLAMATION>;
            mods = <(MOD_RGUI|MOD_RSFT)>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  CAPS |  Q  |  X  |  O  |  U  |  ;  |   |  G  |  C   |  R  |  F  |  Z  | BKSP |
// |  -   |  Y  |  H  |  E  |  A  |  ./@  |   |  D  |  S   |  T  |  N  |  W  |  '   |
// | SHFT |  /  |  ,/!  |  J  |  K  |  '  |   |  B  |  M   |  L  |  P  |  V  | DEL  |
//                    | ESC |  I  | TAB |   | ENT | SPC  | BKSP|
                        bindings = <
   &kp CAPS  &kp Q      &kp X       &kp O &kp U &kp SEMI           &kp G &kp C  &kp R  &kp F &kp Z &kp BSPC
   &kp MINUS &hm LGUI Y &hm LCTRL H &hm LALT E &hm LSFT A &dot_at  &kp D &hm RSFT S  &hm RALT T  &hm RCTRL N &hm RGUI W &kp SQT
   &kp LSHFT &kp FSLH   &comexcl   &kp J &kp K                    &kp SQT  &kp B &kp M  &kp L  &kp P &kp V &mo 1
                  &lt NAV ESC &lt NUMS I &kp TAB        &kp RET &lt SYMB SPACE &kp BSPC
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |    |     |     |     |     |     |  |  /  |  7  |  8  |  9   |     |      |
// |  |   |   |   |   |   |              |  .  |  4  |  5  |  6   |     |      |
// |   |     |     |     |     |     |   |  ,  |  1  |  2  |  3   |     |      |
//                    |   |     |   |    |  =  |  0  |  \  |
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans  &kp FSLH  &kp N7  &kp N8  &kp N9  &trans  &trans  
   &trans  &trans  &trans  &trans  &trans  &trans  &kp DOT   &kp N4  &kp N5  &kp N6  &trans  &trans  
   &trans  &trans  &trans  &trans  &trans  &trans  &kp COMMA &kp N1  &kp N2  &kp N3  &trans  &trans  
              &trans  &trans  &trans  &kp EQUAL  &kp N0  &kp BSLH  
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  |     | <  | $   | >   | | |      |     |  [  |  _  |  ]   |     |      |
// |  |  \  | (  | "   | )   | # |      |  %  |  {  |  =  |  }   |  |  |      |
// |  |     | :  | *   | +   | ! |      |  `  |  &  |  ^  |  ~   |     |      |
//                    |   |     |   |    |     |     |     |
                        bindings = <
   &trans  &trans   &kp LT    &kp DLLR &kp GT   &kp PIPE &trans      &kp LBKT &kp UNDER &kp RBKT &trans   &trans  
   &trans  &kp BSLH &kp LPAR  &kp DQT  &kp RPAR &kp HASH &kp PERCENT &kp LBRC &kp EQUAL &kp RBRC &kp PIPE &trans  
   &trans  &trans   &kp COLON &kp STAR &kp PLUS &kp EXCL &kp GRAVE   &kp AMPS &kp CARET &kp TILDE &trans  &trans  
              &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };

                nav_layer {
                        bindings = <
   &trans  &trans  &trans  &trans  &trans           &p12    &trans  &kp HOME  &kp UP    &kp END    &kp PG_UP  &trans  
   &trans  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSFT  &p11    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN  &trans  
   &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LS(INS)   &trans  &kp PRINTSCREEN &trans  &trans  &trans  &trans  
              &trans  &trans  &trans  &trans  &trans  &trans
                        >;
                };

                media_fkeys_layer {
                        bindings = <
   &trans  &trans  &trans  &trans  &trans  &trans                   &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans  
   &trans  &trans  &trans  &trans  &trans  &kp C_VOL_UP             &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans  
   &trans  &trans  &kp C_PREV &kp C_NEXT  &kp C_PP  &kp C_VOL_DN    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans  
              &trans  &trans  &trans                                   &trans  &trans  &ext_power EP_TOG
                        >;
                };
        };
};
   //&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  
   //&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  
   //&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  
   //           &trans  &trans  &trans                     &trans  &trans  &trans  
